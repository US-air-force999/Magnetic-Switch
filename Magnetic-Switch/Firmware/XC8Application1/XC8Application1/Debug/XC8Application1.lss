
XC8Application1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000028  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800040  00800040  000000bc  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000000bc  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000000eb  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000000f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000050d  00000000  00000000  00000119  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002c2  00000000  00000000  00000626  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000010c  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000009f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000f6  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000b0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000002  0000003c  0000003c  000000b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b20  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    00000002  0000003e  0000003e  000000b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.__dummy_fini 00000002  00000040  00000040  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_funcs_on_exit 00000002  00000042  00000042  000000b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_simulator_exit 00000002  00000044  00000044  000000b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.exit    00000014  00000028  00000028  0000009c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text._Exit   00000002  00000046  00000046  000000ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	1c c0       	rjmp	.+56     	; 0x3c <__CCP__>
   4:	1b c0       	rjmp	.+54     	; 0x3c <__CCP__>
   6:	1a c0       	rjmp	.+52     	; 0x3c <__CCP__>
   8:	19 c0       	rjmp	.+50     	; 0x3c <__CCP__>
   a:	18 c0       	rjmp	.+48     	; 0x3c <__CCP__>
   c:	17 c0       	rjmp	.+46     	; 0x3c <__CCP__>
   e:	16 c0       	rjmp	.+44     	; 0x3c <__CCP__>
  10:	15 c0       	rjmp	.+42     	; 0x3c <__CCP__>
  12:	14 c0       	rjmp	.+40     	; 0x3c <__CCP__>

00000014 <__ctors_end>:
  14:	11 27       	eor	r17, r17
  16:	1f bf       	out	0x3f, r17	; 63
  18:	cf e5       	ldi	r28, 0x5F	; 95
  1a:	d0 e0       	ldi	r29, 0x00	; 0
  1c:	de bf       	out	0x3e, r29	; 62
  1e:	cd bf       	out	0x3d, r28	; 61
  20:	0e d0       	rcall	.+28     	; 0x3e <__SP_H__>
  22:	02 c0       	rjmp	.+4      	; 0x28 <_etext>

00000024 <_exit>:
  24:	f8 94       	cli

00000026 <__stop_program>:
  26:	ff cf       	rjmp	.-2      	; 0x26 <__stop_program>

Disassembly of section .text:

0000003c <__bad_interrupt>:
  3c:	e1 cf       	rjmp	.-62     	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

0000003e <main>:
 */ 

#include <xc.h>

int main(void)
{
  3e:	ff cf       	rjmp	.-2      	; 0x3e <main>

Disassembly of section .text.__dummy_fini:

00000040 <_fini>:
  40:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000042 <__funcs_on_exit>:
  42:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000044 <__simulator_exit>:
  44:	08 95       	ret

Disassembly of section .text.exit:

00000028 <exit>:
  28:	c8 2f       	mov	r28, r24
  2a:	d9 2f       	mov	r29, r25
  2c:	0a d0       	rcall	.+20     	; 0x42 <__funcs_on_exit>
  2e:	08 d0       	rcall	.+16     	; 0x40 <_fini>
  30:	8c 2f       	mov	r24, r28
  32:	9d 2f       	mov	r25, r29
  34:	07 d0       	rcall	.+14     	; 0x44 <__simulator_exit>
  36:	8c 2f       	mov	r24, r28
  38:	9d 2f       	mov	r25, r29
  3a:	05 d0       	rcall	.+10     	; 0x46 <_Exit>

Disassembly of section .text._Exit:

00000046 <_Exit>:
  46:	ee df       	rcall	.-36     	; 0x24 <_exit>
